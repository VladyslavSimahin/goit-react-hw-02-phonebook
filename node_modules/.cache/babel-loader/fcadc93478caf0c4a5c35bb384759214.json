{"ast":null,"code":"var _jsxFileName = \"/Users/7k/Desktop/goit-react-hw-02-phonebook/src/components/App.jsx\";\nimport { Component } from 'react';\nimport { ContactList } from './Phonebook/ContactList';\nimport { FilterContacts } from './Phonebook/FilterContacts';\nimport { ContactForm } from './Phonebook/phonebook';\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.getFilteredValue = filterValue => {\n      this.setState({\n        filter: filterValue\n      });\n    };\n\n    this.getFilteredContacts = () => {\n      const {\n        contacts,\n        filter\n      } = this.state;\n      return contacts.filter(_ref => {\n        let {\n          name\n        } = _ref;\n        return name.toLowerCase().includes(filter);\n      });\n    };\n\n    this.findContactByName = nameValue => {\n      return this.state.contacts.find(_ref2 => {\n        let {\n          name\n        } = _ref2;\n        return name === nameValue;\n      });\n    };\n\n    this.addContact = data => {\n      const id = nanoid();\n\n      if (this.findContactByName(data.name)) {\n        Notiflix.Notify.failure(`You already have ${data.name} in your phonebook`);\n        return;\n      }\n\n      this.setState(_ref3 => {\n        let {\n          contacts\n        } = _ref3;\n        return {\n          contacts: [...contacts, { ...data,\n            id\n          }]\n        };\n      });\n    };\n\n    this.removeContact = idValue => {\n      this.setState(_ref4 => {\n        let {\n          contacts\n        } = _ref4;\n        return {\n          contacts: contacts.filter(_ref5 => {\n            let {\n              id\n            } = _ref5;\n            return id !== idValue;\n          })\n        };\n      });\n    };\n  }\n\n  render() {\n    const contacts = this.getFilteredContacts();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        addContact: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterContacts, {\n        getFilteredValue: this.getFilteredValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        removeContact: this.removeContact,\n        contacts: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/7k/Desktop/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["Component","ContactList","FilterContacts","ContactForm","nanoid","Notiflix","App","state","contacts","id","name","number","filter","getFilteredValue","filterValue","setState","getFilteredContacts","toLowerCase","includes","findContactByName","nameValue","find","addContact","data","Notify","failure","removeContact","idValue","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { ContactList } from './Phonebook/ContactList';\nimport { FilterContacts } from './Phonebook/FilterContacts';\nimport { ContactForm } from './Phonebook/phonebook';\n\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  getFilteredValue = filterValue => {\n    this.setState({ filter: filterValue });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  };\n\n  findContactByName = nameValue => {\n    return this.state.contacts.find(({ name }) => name === nameValue);\n  };\n\n  addContact = data => {\n    const id = nanoid();\n\n    if (this.findContactByName(data.name)) {\n      Notiflix.Notify.failure(\n        `You already have ${data.name} in your phonebook`\n      );\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, { ...data, id }],\n    }));\n  };\n\n  removeContact = idValue => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(({ id }) => id !== idValue),\n    }));\n  };\n\n  render() {\n    const contacts = this.getFilteredContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        <FilterContacts getFilteredValue={this.getFilteredValue} />\n        <ContactList removeContact={this.removeContact} contacts={contacts} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}